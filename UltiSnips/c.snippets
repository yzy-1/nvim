priority -50

snippet #inc< "#include <...>" b
#include <${1:bits/stdc++.h}>$0
endsnippet

snippet #inc "#include ..." b
#include "${VISUAL}$0"
endsnippet

snippet #if "#if #endif" b
#if ${1:0}
${VISUAL}$0
#endif
endsnippet

snippet #ifndef "#ifndef ... #define ... #endif" b
#ifndef ${1:`!p
	import string, re
		name = re.sub(r'[^A-Za-z0-9]+','_', snip.fn).upper()
		snip.rv = ('%s_' % (name)).upper()
		`}
#define ${1:SYMBOL} ${2:value}

		${VISUAL}$0

#endif // ifndef $1
		endsnippet

		snippet main "main function"
		int main(int argsLength, char *args[]) {
			${VISUAL}$0
				return 0;
		}
endsnippet

snippet for "for loop"
for (int ${1:i} = ${2:0}; $1 < ${3:LENGTH}; ++$1) {
	${VISUAL}$4
}$0
endsnippet

snippet fore "for loop empty"
for ($1) {
	${VISUAL}$2
}$0
endsnippet

snippet forr "for loop reverse"
for (int ${1:i} = ${2:count - 1}; $1 >= ${3:0}; --$1) {
	${VISUAL}$4
}$0
endsnippet

snippet if "if (...)"
if (${1:expression}) {
	${VISUAL}$2
}$0
endsnippet

snippet else "else"
else {
	${VISUAL}$1
}$0
endsnippet

snippet elseif "else if (...)"
else if (${1:expression}) {
	${VISUAL}$2
}$0
endsnippet

snippet while "while loop"
while (${1:expression}) {
	${VISUAL}$2
}$0
endsnippet

snippet do "do while loop"
do {
	${VISUAL}$0
} while (${1:expression});
endsnippet

snippet func "function"
${1:void} ${2:FunctionName}($3) {
	${VISUAL}$0
}
endsnippet

snippet fund "function declaration"
${1:void} ${2:FunctionName}($3);
endsnippet

snippet struct "struct ..."
struct ${1:StructName} {
	${0:/* data */}
};
endsnippet

snippet union "union ..."
union ${1:UnionName} {
	${0:/* data */}
};
endsnippet

snippet fin "freopen("...in", "r", stdin)" b
freopen("$1.in", "r", stdin);
endsnippet

snippet fout "freopen("...out", "r", stdout)" b
freopen("$1.out", "w", stdout);
endsnippet

snippet O2 "Description" b
#pragma GCC optimize(2)
endsnippet

snippet maxn "const long long N = ..."
const long long N = ${1:1e6 + 5};$0
endsnippet
